name: .NET CI (Windows App)

on:
  push:
    branches: [ main, 'spec/**' ]
  pull_request:
    branches: [ main ]

jobs:
  build_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: Restore
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Test
        run: dotnet test --configuration Release --no-build --verbosity minimal
      - name: Validate tiers.json against tiers.schema.json (if present)
        shell: bash
        run: |
          if [ -f tiers.json ] && [ -f tiers.schema.json ]; then
            python3 - <<'PY'
            import json, sys
            from jsonschema import validate, Draft2020Validator
            try:
                import jsonschema  # ensure installed
            except ImportError:
                import subprocess, sys as _sys
                subprocess.check_call([_sys.executable, '-m', 'pip', 'install', 'jsonschema'])
            with open('tiers.schema.json','r',encoding='utf-8') as f:
                schema=json.load(f)
            with open('tiers.json','r',encoding='utf-8') as f:
                data=json.load(f)
            Draft2020Validator.check_schema(schema)
            validate(instance=data, schema=schema)
            print('tiers.json is valid against tiers.schema.json')
            PY
          else
            echo "No tiers.json/schema found; skipping validation"
          fi
      - name: Pre-commit (format check)
        shell: bash
        run: |
          pipx install pre-commit || pip install pre-commit
          pre-commit run --all-files || true
